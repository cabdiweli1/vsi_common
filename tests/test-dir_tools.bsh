#!/usr/bin/env bash

. "$(dirname "${BASH_SOURCE[0]}")/testlib.bsh"
. "$(dirname "${BASH_SOURCE[0]}")/test_utils.bsh"

VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
. "${VSI_COMMON_DIR}/linux/dir_tools.bsh"

begin_test "parent find files"
(
  setup_test

  mkdir -p a/b/c/d/e/f
  touch a/b/test1
  touch a/b/test11
  touch a/test12
  touch a/b/c/d/e/f/test2
  touch test3

  pushd a/b/c/d/e/f
    parent_find_files test1
    check_a file_matches "${TESTDIR}/a/b/test1"
    parent_find_files test1 test11 test12
    check_a file_matches "${TESTDIR}/a/b/test1" "${TESTDIR}/a/b/test11"
    parent_find_files test2
    check_a file_matches "${TESTDIR}/a/b/c/d/e/f/test2"
    parent_find_files test3
    check_a file_matches "${TESTDIR}/test3"
    parent_find_files test4
    check_a file_matches
  popd

  pushd a/b/c/d/e
    parent_find_files test1
    check_a file_matches "${TESTDIR}/a/b/test1"
    parent_find_files test1 test11 test12
    check_a file_matches "${TESTDIR}/a/b/test1" "${TESTDIR}/a/b/test11"
    parent_find_files test2
    check_a file_matches
    parent_find_files test3
    check_a file_matches "${TESTDIR}/test3"
    parent_find_files test4
    check_a file_matches
  popd

  parent_find_files test1
  check_a file_matches
  parent_find_files test1 test11 test12
  check_a file_matches
  parent_find_files test2
  check_a file_matches
  parent_find_files test3
  check_a file_matches "${TESTDIR}/test3"
  parent_find_files test4
  check_a file_matches
)
end_test

begin_test "parent find files test infinite loop"
(
  setup_test

  timeout 10 bash -c ". '${VSI_COMMON_DIR}/linux/dir_tools.bsh'; parent_find_files does_not_exist"

  # Windows bash can't cd to // but can ///, which becomes /, so no point in testing
  if cd "/${PWD}"; then
    timeout 10 bash -c ". '${VSI_COMMON_DIR}/linux/dir_tools.bsh'; parent_find_files does_not_exist"
  fi
)
end_test

begin_test "make temp paths cleanup"
(
  setup_test

  # Find out where all the tempdirs go when they are born
  base_temp="$(dirname "$(mktemp -u -d)")"

  # Create random filename
  temp_file="$(basename "$(mktemp -u -t XXXXXXXXXXXXXXXX)")"

  (
    make_temp_path temp_dir -d
    touch "${temp_dir}/${temp_file}"
    make_temp_path temp_dir -d
    touch "${temp_dir}/${temp_file}"

    # Verify I have two different dirs with this same random file name in it
    [ "$(ls "${base_temp}/"*"/${temp_file}" | wc -l)" -eq 2 ]
  )

  # Verify I have no dirs with this random file name in it
  not ls "${base_temp}/"*"/${temp_file}" &> /dev/null

  make_temp_path temp_file
  [ -e "${temp_file}" ]
  _make_temp_path_cleanup
  [ ! -e "${temp_file}" ]
)
end_test

begin_test "normpath"
(
  setup_test

  [ "$(normpath /)" = "/" ]
  [ "$(normpath /abc)" = "/abc" ]
  [ "$(normpath /abc//def)" = "/abc/def" ]
  [ "$(normpath /abc///def)" = "/abc/def" ]
  [ "$(normpath /abc/././././def)" = "/abc/def" ]
  [ "$(normpath /abc/././././)" = "/abc" ]
  [ "$(normpath /././././abc)" = "/abc" ]
  [ "$(normpath /abc/./././def)" = "/abc/def" ]
  [ "$(normpath /abc/././def)" = "/abc/def" ]
  [ "$(normpath /abc/./def)" = "/abc/def" ]
  [ "$(normpath /abc/../)" = "/" ]
  [ "$(normpath /abc/def../)" = "/abc/def.." ]
  [ "$(normpath /abc/..def/)" = "/abc/..def" ]
  [ "$(normpath /abc/def/../)" = "/abc" ]
  [ "$(normpath /../)" = "/" ]
  [ "$(normpath /../../)" = "/" ]
  [ "$(normpath ../)" = ".." ]
  [ "$(normpath ./)" = "." ]
  [ "$(normpath ././././abc)" = "./abc" ]
  [ "$(normpath /abc/../../)" = "/" ]
  [ "$(normpath /abc/def/../../)" = "/" ]
  [ "$(normpath ../../wtf/)" = "../../wtf" ]
  [ "$(normpath ../../../wtf/)" = "../../../wtf" ]
  [ "$(normpath ./../../../wtf/)" = "../../../wtf" ]
)
end_test

begin_test "basenames"
(
  setup_test

  [ "$(basenames 2 test)" = "./test" ]
  [ "$(basenames 2 /aaa/test)" = "aaa/test" ]
  [ "$(basenames 2 /bbb/aaa/test)" = "aaa/test" ]
  [ "$(basenames 2 /ccc/bbb/aaa/test)" = "aaa/test" ]

  [ "$(basenames 2 ./test)" = "./test" ]
  [ "$(basenames 2 ./aaa/test)" = "aaa/test" ]
  [ "$(basenames 2 ./bbb/aaa/test)" = "aaa/test" ]
  [ "$(basenames 2 ./ccc/bbb/aaa/test)" = "aaa/test" ]

  [ "$(basenames 1 aaa/test)" = "test" ]
  [ "$(basenames 1 /aaa//test)" = "test" ]

  [ "$(basenames 2 /this/is/a/test)" = "a/test" ]
  [ "$(basenames 2 aaa/test)" = "aaa/test" ]
  [ "$(basenames 2 /aaa//test)" = "aaa/test" ]
)
end_test

begin_test "dirname"
(
  setup_test

  [ "$(command dirname /a/b/c)" = "$(dirname /a/b/c)" ]
  [ "$(command dirname /a/b/c/)" = "$(dirname /a/b/c/)" ]
  [ "$(command dirname a)" = "$(dirname a)" ]
  [ "$(command dirname a/b)" = "$(dirname a/b)" ]
  [ "$(command dirname /a)" = "$(dirname /a)" ]
)
end_test

begin_test "basename"
(
  setup_test

  [ "$(command basename /a/b/c)" = "$(basename /a/b/c)" ]
  [ "$(command basename /a/b/c/)" = "$(basename /a/b/c/)" ]
  [ "$(command basename a)" = "$(basename a)" ]
  [ "$(command basename a/b)" = "$(basename a/b)" ]
  [ "$(command basename /a)" = "$(basename /a)" ]
)
end_test